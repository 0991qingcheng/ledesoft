#!/bin/sh

export KSROOT=/koolshare
source $KSROOT/scripts/base.sh
eval `dbus export serverchan_`
url=`echo https://sc.ftqq.com/"$serverchan_sckey".send`


# for long message job remove
remove_cron_job(){
	[ ! -f  "/etc/crontabs/root" ] && touch /etc/crontabs/root
	jobexist=`cat /etc/crontabs/root|grep serverchan_check`
	# kill crontab job
	if [ -n "$jobexist" ];then
		echo 关闭自动发送状态消息...
		sed -i '/serverchan_check/d' /etc/crontabs/root >/dev/null 2>&1
	fi
}

# for long message job creat
creat_cron_job(){
	[ ! -f  "/etc/crontabs/root" ] && touch /etc/crontabs/root
	CRONTAB=`cat /etc/crontabs/root|grep serverchan_check`
	if [ "$serverchan_status_check" == "1" ]; then
		if [ -z "$CRONTAB" ];then
			echo 开启定时发送状态消息，每天"$serverchan_check_time_hour"时 "$serverchan_check_time_min"分，自动发送状态消息...
			echo  "$serverchan_check_time_min $koolproxy_reboot_hour * * * $KSROOT/scripts/serverchan_check" >> /etc/crontabs/root
		fi 
	elif [ "$serverchan_status_check" == "2" ]; then
		if [ -z "$CRONTAB" ];then
			echo 开启定时发送状态消息，每隔"$serverchan_check_inter_hour"时 "$serverchan_check_inter_min"分，自动发送状态消息... 
			if [ "$serverchan_check_inter_hour" == "0" ] && [ "$serverchan_check_inter_min" != "0" ];then
				echo  "*/$serverchan_check_inter_min * * * * $KSROOT/scripts/serverchan_check" >> /etc/crontabs/root
			elif [ "$serverchan_check_inter_hour" != "0" ] && [ "$serverchan_check_inter_min" == "0" ];then
				echo  "0 */$serverchan_check_inter_hour * * * $KSROOT/scripts/serverchan_check" >> /etc/crontabs/root
			elif [ "$serverchan_check_inter_hour" != "0" ] && [ "$serverchan_check_inter_min" != "0" ];then
				echo  "*/$serverchan_check_inter_min */$serverchan_check_inter_hour * * * $KSROOT/scripts/serverchan_check" >> /etc/crontabs/root
			elif [ "$serverchan_check_inter_hour" == "0" ] && [ "$serverchan_check_inter_min" == "0" ];then
				echo "do nothing"
			fi
		fi
	else
		remove_cron_job
	fi
}

# for short message
creat_trigger_ifup(){
	if [ ! -f "/etc/hotplug.d/iface/66-serverchan" ]; then
		cat > /etc/hotplug.d/iface/66-serverchan <<-EOF
		#!/bin/sh
		[ "\$ACTION" = "ifup" -a "\$INTERFACE" = "wan" ] && {
		    ./koolshare/scripts/serverchan_ifup_trigger
		}
		EOF
	fi
	chmod +x /etc/hotplug.d/iface/66-serverchan
}

remove_trigger_ifup(){
	find /etc/hotplug.d/iface/ -name "*serverchan" | xargs rm -rf
}

creat_trigger_dhcp(){
	uci set dhcp.@dnsmasq[0].dhcpscript='/koolshare/scripts/serverchan_dhcp_trigger'
	uci commit
	/etc/init.d/dnsmasq restart
}

remove_trigger_dhcp(){
	uci delete dhcp.@dnsmasq[0].dhcpscript
	uci commit
	/etc/init.d/dnsmasq restart
}

# used by httpdb
case $2 in
start)
	if [ "$serverchan_enable" == "1" ];then
		remove_trigger_ifup
		remove_trigger_dhcp
		remove_cron_job
		[ "$serverchan_trigger_ifup"  == "1" ] && creat_trigger_ifup
		[ "$serverchan_trigger_dhcp"  == "1" ] && creat_trigger_dhcp
		creat_cron_job
    	http_response '设置已保存！切勿重复提交！页面将在1秒后刷新'
    else
		remove_trigger_ifup
		remove_trigger_dhcp
		remove_cron_job
    fi
	;;
manual)
    /koolshare/scripts/serverchan_check checknow
    http_response '消息已发送！'
	;;
send)
    url=`echo https://sc.ftqq.com/"$serverchan_sckey".send`
    serverchan_send_title=`echo $serverchan_send_title|base64_decode`
    serverchan_send_content=`echo $serverchan_send_content|base64_decode`
    wget --post-data "text=$serverchan_send_title&desp=$serverchan_send_content" $url
    http_response '消息发送完毕！'
	;;
stop)
	remove_trigger_ifup
	remove_trigger_dhcp
	remove_cron_job
    http_response '设置已保存！切勿重复提交！页面将在1秒后刷新'
	;;
esac
